<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.sunyazhou.com</id><title>迈腾大队长</title><subtitle>嗨,我是孙亚洲(@sunyazhou13),一名来自祖国北国冰城的iOS开发者.</subtitle> <updated>2024-04-03T08:39:07+00:00</updated> <author> <name>孙亚洲</name> <uri>https://www.sunyazhou.com</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.sunyazhou.com" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2024 孙亚洲 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>保持原UIImage缩放比的计算方法</title><link href="https://www.sunyazhou.com/2024/04/keepimagescale/" rel="alternate" type="text/html" title="保持原UIImage缩放比的计算方法" /><published>2024-04-02T09:16:00+00:00</published> <updated>2024-04-03T08:39:07+00:00</updated> <id>https://www.sunyazhou.com/2024/04/keepimagescale/</id> <content src="https://www.sunyazhou.com/2024/04/keepimagescale/" /> <author> <name>孙亚洲</name> </author> <category term="iOS" /> <category term="SwiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或引用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. 代码记录 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /// 保持宽高比不变的前提的 宽高不超过 最大限制2048 /// - Parameter imageSize: 原始大小 - (CGSize)keepScaleSize:(CGSize)imageSize { if (kw_is_float_zero(imageSize.width) || kw_is_float_zero(imageSize.height)) { return imageSize; } //check有没有超过最大限制 if (imageSize.width &amp;lt; 2048 &amp;amp;&amp;amp; imageSize.height ... </summary> </entry> <entry><title>使用Masonry高阶方法对子视图统一布局</title><link href="https://www.sunyazhou.com/2024/03/masonryrelayoutviews/" rel="alternate" type="text/html" title="使用Masonry高阶方法对子视图统一布局" /><published>2024-03-22T13:24:00+00:00</published> <updated>2024-04-03T08:39:07+00:00</updated> <id>https://www.sunyazhou.com/2024/03/masonryrelayoutviews/</id> <content src="https://www.sunyazhou.com/2024/03/masonryrelayoutviews/" /> <author> <name>孙亚洲</name> </author> <category term="iOS" /> <category term="SwiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或分享,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,感谢支持!. 背景介绍 在开发过程中,经常遇到某些入口的出现和消失不是按照指定的时序发生,比如 上面这三个入口,出现的时机不区分先后,但是出现的顺序是固定的, 这里就存在一些很不好处理的问题, 比如A视图出现 依赖B视图的位置,如果B不在那要继续向上或者向下依赖. 面临的挑战案例 基于上述的背景描述,我们需要处理的问题如下 假设 入口视图的出现时机或者消失时机, 不是时序顺序的,是时序随机的. 各个入口视图的有依赖关系, 或者顺序固定 要如何处理 有没有简单更有效的方式 使用少量代码解决上述问题的最优解. 根据上述的挑战我们来分析一下如何解决 要给所有入口视图添加优先级, 添加和删除都需要排序 各种视图添加的时间是不固定的,那么就要有一个公用的方法控制他们添加和移除或者说是显示和消失都必须要调用的方法用于布局... </summary> </entry> <entry><title>运动传感器摇晃检测</title><link href="https://www.sunyazhou.com/2024/02/MotionShake/" rel="alternate" type="text/html" title="运动传感器摇晃检测" /><published>2024-02-21T06:56:00+00:00</published> <updated>2024-04-03T08:39:07+00:00</updated> <id>https://www.sunyazhou.com/2024/02/MotionShake/</id> <content src="https://www.sunyazhou.com/2024/02/MotionShake/" /> <author> <name>孙亚洲</name> </author> <category term="iOS" /> <category term="SwiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或引用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. 背景说明 最近开发遇到用户反馈,开启晃动手机切换歌曲时,放裤兜或者衣服口袋中,很容易触发主动切换歌曲,带着这个问题,我仔 细研究了一下固有代码. 很显然用户使用摇一摇手机切换歌曲的灵敏度太高了.那怎么调整灵敏度到一个合理区间呢？ 实现摇晃动作的几种方式 1.系统事件 2.CMMotionManager加速计api 3.UIAccelerometer 系统的摇一摇事件 我们可以写一个继承自UIResponder的类,实现如下方法 1 2 3 4 5 6 7 8 9 10 -(BOOL)canBecomeFirstResponder { return YES; } - (void)motionEnded:(UIEventSubtype)motion withEvent:(U... </summary> </entry> <entry><title>iOS控制中心收藏按钮likeCommand动画</title><link href="https://www.sunyazhou.com/2024/01/mpremotecommandlikecommand/" rel="alternate" type="text/html" title="iOS控制中心收藏按钮likeCommand动画" /><published>2024-01-25T05:03:00+00:00</published> <updated>2024-04-03T08:39:07+00:00</updated> <id>https://www.sunyazhou.com/2024/01/mpremotecommandlikecommand/</id> <content src="https://www.sunyazhou.com/2024/01/mpremotecommandlikecommand/" /> <author> <name>孙亚洲</name> </author> <category term="iOS" /> <category term="SwiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或分享,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,感谢支持!. 背景描述 最近开发中,产品要求在音频播放控制中心中增加 收藏按钮, 查看了QQ音乐和网易云音乐发现他们都已经有了此按钮,然而在酷我音乐的app切后台锁屏后这个按钮没有漏出,查了一下代码发现按钮没有添加,于是加了按钮发现没有动画效果. 就此问题查了全网没有一个说清楚的,经过反复测试发现,苹果给我们提供了一个新的api我们没有注意. 先看看做完啥效果, 这里要用到的关键代码api如下: 1 2 3 4 5 6 7 8 @interface MPFeedbackCommand : MPRemoteCommand /// Whether the feedback command is in an "active" state. An example of when a /// feedback command would be ... </summary> </entry> <entry><title>ArkTS和ArkUI基础语法</title><link href="https://www.sunyazhou.com/2024/01/arktsbasic/" rel="alternate" type="text/html" title="ArkTS和ArkUI基础语法" /><published>2024-01-19T02:19:00+00:00</published> <updated>2024-04-03T08:39:07+00:00</updated> <id>https://www.sunyazhou.com/2024/01/arktsbasic/</id> <content src="https://www.sunyazhou.com/2024/01/arktsbasic/" /> <author> <name>孙亚洲</name> </author> <category term="ArkUI" /> <category term="HarmonyOS" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或分享,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,感谢支持!. 以下内容是学习记录 DevEco Studio快捷键 快捷键 用途 备注 ⌘(Command) + B 进入到类或者对象的定义文件中中 类似Xcode中的 ⌘(Command) + → ⌘(Command) + ⇧(Shift) + ⌫(Back) 与上面相反,返回上一级 类似Xcode中的 ⌘(Command) + ←             在看过几遍鸿蒙教程视频和文档后,我觉得把容易遗忘的基础都记录下来,以备后续... </summary> </entry> </feed>
