<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.sunyazhou.com</id><title>迈腾大队长</title><subtitle>嗨,我是孙亚洲(@sunyazhou13),一名来自祖国北国冰城的iOS开发者.</subtitle> <updated>2023-02-13T20:24:37+08:00</updated> <author> <name>孙亚洲</name> <uri>https://www.sunyazhou.com</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.sunyazhou.com" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 孙亚洲 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>iOS中NSDate是否是今天Today</title><link href="https://www.sunyazhou.com/2023/02/nsdateistoday/" rel="alternate" type="text/html" title="iOS中NSDate是否是今天Today" /><published>2023-02-13T19:39:00+08:00</published> <updated>2023-02-13T20:24:37+08:00</updated> <id>https://www.sunyazhou.com/2023/02/nsdateistoday/</id> <content src="https://www.sunyazhou.com/2023/02/nsdateistoday/" /> <author> <name>孙亚洲</name> </author> <category term="swiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. 背景 每天的iOS开发过程中经常会出现Check一些逻辑是否每天仅发生一次,一般我们的通用是用NSDate判断是否是今天,然后对NSDate做持久化存储 eg: MMKV、或者NSUserDefault,但随着工程的日渐庞大,我们逐渐关注一些细节和代码 的耗时. 首先来看一下几种不同的逻辑判断NSDateisToday的代码实现 1.系统NSCalendar日历 1 2 NSDate *date = [NSDate date]; //这里取当前日期,正常应该做为参数传入NSDate BOOL inToday = [[NSCalendar currentCalendar] isDateInToday:date] 2.增加更多参数调用NSCalendar 1 2 3 4 5 6 7 8... </summary> </entry> <entry><title>如何使用jekyll发布一篇文章</title><link href="https://www.sunyazhou.com/2023/02/jekyllpost/" rel="alternate" type="text/html" title="如何使用jekyll发布一篇文章" /><published>2023-02-02T10:21:00+08:00</published> <updated>2023-02-13T20:24:37+08:00</updated> <id>https://www.sunyazhou.com/2023/02/jekyllpost/</id> <content src="https://www.sunyazhou.com/2023/02/jekyllpost/" /> <author> <name>孙亚洲</name> </author> <category term="Blog" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. jekyll 我的博客开始使用的是hexo,后来喵神 把博客换成以jekyll的形式,我还是很喜欢的.可是之前hexo要写一篇文章直接就可以用 1 2 hexo new "202300202XXXPaper" 的形式 通过模版生成一个markdown文件. 具体使用一看看hexo 指令 然而新的https://github.com/cotes2020/jekyll-theme-chirpy/ 主题 在喵大的简化版本里面还是比较简单实用的,唯独缺少了 如何快速写文章的操作. 经过和喵神邮件请教 喵神不但回复了我并表示 他不是很经常写文章,这种操作他都是复制一下原来的也不麻烦.邮件末尾喵神给出来一个非常实用的 stackoverflow的答案. 在我的博客中有一个Gemfile文件 ... </summary> </entry> <entry><title>Swift中的defer关键字</title><link href="https://www.sunyazhou.com/2023/02/swift-defer/" rel="alternate" type="text/html" title="Swift中的defer关键字" /><published>2023-02-01T10:10:58+08:00</published> <updated>2023-02-13T20:24:37+08:00</updated> <id>https://www.sunyazhou.com/2023/02/swift-defer/</id> <content src="https://www.sunyazhou.com/2023/02/swift-defer/" /> <author> <name>孙亚洲</name> </author> <category term="swiftUI" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. defer关键字 在swift中有一个关键字非常 类似 try catch finally中的finally,在一个代码块中执行完成后 执行最后的收尾代码完成一些收尾工作. 例如: 清理工作、回收资源 跟 swift 文档举的例子类似，defer一个很适合的使用场景就是用来做清理工作。文件操作就是一个很好的例子： 关闭文件 1 2 3 4 5 6 7 func foo() { let fileDescriptor = open(url.path, O_EVTONLY) defer { close(fileDescriptor) } // use fileDescriptor... } 在例如： dealloc 手动分配的空间,最后销毁内存 1 2 3 4 5 6 7 func... </summary> </entry> <entry><title>2022年终总结</title><link href="https://www.sunyazhou.com/2022/12/FinalSummary/" rel="alternate" type="text/html" title="2022年终总结" /><published>2022-12-24T14:54:00+08:00</published> <updated>2023-02-13T20:24:37+08:00</updated> <id>https://www.sunyazhou.com/2022/12/FinalSummary/</id> <content src="https://www.sunyazhou.com/2022/12/FinalSummary/" /> <author> <name>孙亚洲</name> </author> <category term="记录世界记录你" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. 年终将至,作业催交. 州司临门,病毒被秒. 诸事皆顺,时光渐少. 励精图治,地上逍遥. 这是坚持写年终总结的第5个年头了,如果非要给今年的总结写个主题的话我肤浅的认为每天都活在自我否定后的不断妥协中的一年最为贴切. 2021年终总结 2020年终总结 2019年终总结 2018年终总结 2017年终总结 真的是有量的积累，才有质的飞跃. 2022回顾 关于生活 关于工作 关于学习 关于理想 关于好物 关于生活 疫情3年多了,直到这个月初才真正的放开,经过3针疫苗后,放开的第一周不幸中招.还好康复的很快. 2022年的春节是在北京过的,这是自参加工作以来唯一一次被疫情逼迫不得不在北京过年.说到底还是因为穷人的世界处处都是困难.... </summary> </entry> <entry><title>模仿Q音径向渐变动画</title><link href="https://www.sunyazhou.com/2022/12/gradientlayeranimation/" rel="alternate" type="text/html" title="模仿Q音径向渐变动画" /><published>2022-12-07T16:00:00+08:00</published> <updated>2023-02-13T20:24:37+08:00</updated> <id>https://www.sunyazhou.com/2022/12/gradientlayeranimation/</id> <content src="https://www.sunyazhou.com/2022/12/gradientlayeranimation/" /> <author> <name>孙亚洲</name> </author> <category term="iOS开发" /> <summary> 前言 本文具有强烈的个人感情色彩,如有观看不适,请尽快关闭. 本文仅作为个人学习记录使用,也欢迎在许可协议范围内转载或使用,请尊重版权并且保留原文链接,谢谢您的理解合作. 如果您觉得本站对您能有帮助,您可以使用RSS方式订阅本站,这样您将能在第一时间获取本站信息. 先上成品看看效果 深入CAGradientLayer 最近开发功能,视觉设计同学对QQ音乐的桌面歌词预览图的流体渐变动画很感兴趣,想让开发这边实现这个效果. 仔细观察歌词背景( 若不是我左右眼都是5.0 我第一次看到QQ音乐的效果我以为没动画.幼稚被教育了),会有一个类似柔光的效果像个灯光一样照射并移动.视觉设计同学把这个效果称为流体过渡动画. 为了研究这个效果我深入了解了一下CAGradientLayer,发现这里面有几个重要的类型和大家介绍一下 CAGradientLayer中有一个成员变量叫type 1 @property(copy) CAGradientLayerType type; //objc中的成员变量 1 open var type: CAGradientLayerTyp... </summary> </entry> </feed>
